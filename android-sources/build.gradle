import groovy.json.JsonSlurper

String getMeFullPathToAndroidPackageSourceDir() {
    String res = System.getProperty("user.dir");

    FileTree tree = fileTree(dir: res + '/..').include('android*deployment-settings.json');

    String json = tree[0];
    def IF=new File(json);
    def InputJSON=new JsonSlurper().parseText(IF.text);
    res = InputJSON["android-package-source-directory"]

    return res;
}

String path = getMeFullPathToAndroidPackageSourceDir();

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath'com.google.gms:google-services:3.0.0'
        classpath'com.android.tools.build:gradle:1.1.0'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.application'

apply plugin: 'com.google.gms.google-services'

dependencies {
    compile 'com.google.firebase:firebase-messaging:9.8.0'
    compile 'com.google.firebase:firebase-core:9.8.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java', path + '/../../../java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            renderscript.srcDirs = ['src']
            resources.srcDirs= ['src']
            assets.srcDirs= ['assets']
            jniLibs.srcDirs = ['libs']
       }
    }

    defaultConfig {
        applicationId "org.qtproject.example.vittachpeer"
    }

    buildToolsVersion androidBuildToolsVersion

    packagingOptions {
        exclude 'META-INF/beans.xml'
    }
    lintOptions {abortOnError false}
}
